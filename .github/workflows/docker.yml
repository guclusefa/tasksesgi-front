name: Frontend CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-analyze:
    runs-on: ubuntu-latest
    steps:
      # Étape 1 : Récupérer le code source
      - name: Checkout code
        uses: actions/checkout@v3

      # Étape 2 : Configurer Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      # Étape 3 : Installer les dépendances
      - name: Install dependencies
        run: npm install

      # Étape 4 : Lancer les tests
      - name: Run tests
        run: npm run test

      # Étape 5 : Lint du code
      - name: Lint code
        run: npm run lint

      # Étape 6 : Qualité du code avec SonarCloud
      - name: SonarCloud Scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          npx sonar-scanner \
            -Dsonar.projectKey=YanisHlali_vue-front \
            -Dsonar.organization=yanishlali \
            -Dsonar.sources=. \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=$SONAR_TOKEN \
            -Dsonar.branch.name=main

  build-and-push:
    needs: build-and-analyze
    runs-on: ubuntu-latest
    steps:
      # Étape 1 : Récupérer le code source
      - name: Checkout code
        uses: actions/checkout@v3

      # Étape 2 : Configurer Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Étape 3 : Se connecter à DockerHub
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Étape 4 : Construire et publier l'image Docker
      - name: Build and Push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: yanishlali/vue-front:latest

  deploy-to-k8s:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      # Étape 1 : Récupérer le code source
      - name: Checkout code
        uses: actions/checkout@v3

      # Étape 2 : Configurer Minikube et kubectl
      - name: Set up Minikube
        run: |
          curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
          sudo install minikube-linux-amd64 /usr/local/bin/minikube
          minikube start --driver=docker

      - name: Configure kubectl
        run: |
          minikube kubectl -- get pods -A

      # Étape 3 : Déployer sur Kubernetes
      - name: Deploy to Kubernetes
        run: |
          kubectl config use-context minikube
          kubectl apply -f ./k8s/frontend-deployment.yaml
          kubectl apply -f ./k8s/frontend-service.yaml
          kubectl rollout status deployment/vue-front
